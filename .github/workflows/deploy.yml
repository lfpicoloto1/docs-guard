name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'

jobs:
  build:
    runs-on: self-hosted
    environment: prod
    
    env:
      CLOUD_TOKEN: ${{ secrets.CLOUD_TOKEN }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Build Docker image
        run: |
          docker build -t my-app:${{ github.sha }} .
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Tag Docker image as latest
        run: |
          docker tag my-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/my-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest

      - name: Run tests
        run: |
          docker run -e CLOUD_TOKEN=${{ secrets.CLOUD_TOKEN }} --rm my-app:${{ github.sha }} pytest
        
      - name: Push Docker image
        run: |
          docker tag my-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}
      
      - name: Install kubectl
        run: |
          sudo curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Get kubeconfig from Terraform
        id: kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml

      - name: Apply Kubernetes Deployment
        run: |
          kubectl apply -f deploy.yml --kubeconfig=kubeconfig.yaml
